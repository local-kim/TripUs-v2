<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="data.mapper.ReviewMapper">
	<insert id="insertReview" parameterType="review">
		insert into review (place_id,member_num,stars,content,created_at) values (#{place_id},#{member_num},#{stars},#{content},now())
	<selectKey resultType="int" keyProperty="num" order="AFTER">
    	select max(num) from review
    </selectKey>
	</insert> 
	<insert id="insertPhoto" parameterType="Map">
		insert into review_photo (review_num,file_name) values (#{num},#{file_name})
	</insert>
	<delete id="deleteReview">	
		delete from review where num=#{num}
	</delete>
	<delete id="deletePhoto">
		delete from review_photo where review_num=#{num}
	</delete>
	<delete id="oneDeletePhoto">
		delete from review_photo where num=#{review_photo_num}
	</delete>
	<update id="updateReview" parameterType="review">
		update review set stars=#{stars},content=#{content},created_at=now() where num=#{num}
	</update>
	<update id="updatePhoto" parameterType="review">
		update reivew_photo set file_name=#{file_name} where num=#{num}
	</update>
	<select id="getPagingList" resultType="review" parameterType="Map">
		select review.num,place_id,review.member_num,member.name,stars,content,created_at FROM review, `member` where place_id=#{place_id} and review.member_num = member.num order by review.num desc limit #{start},#{perpage}
	</select>
	<select id="getAllDatas" resultType="review" parameterType="String">
		<!-- SELECT review.num,place_id,review.member_num,member.name,stars,content,created_at FROM review, `member` where place_id=#{place_id} and review.member_num = member.num order by review.created_at desc -->
		SELECT review.num,place_id,review.member_num,`member`.`name`,stars,content,created_at,profile_photo.file_name
 		FROM `member`, review left outer join profile_photo on profile_photo.member_num=review.member_num
 		where place_id=#{place_id}and review.member_num = `member`.num order by review.created_at desc
	</select>
	<select id="getAvgStars" parameterType="String" resultType="double">
		SELECT ifnull(truncate(avg(stars),2), 0) from review where place_id=#{place_id}
	</select>
	<select id="getSumLikes" parameterType="String" resultType="int">
		select ifnull(sum(`check`),0) from `like` where place_id = #{place_id}
	</select>
	  <select id="getLike" parameterType="Map" resultType="int">
      select count(*) from `like` where `like`.member_num = #{loginNum} and place_id = #{place_id} and `check`=1 
   </select>

	 <select id="getData" resultType="review" parameterType="int">	
		  <!-- select review.num,place_id,review.member_num,member.name,stars,content,created_at,review_photo.file_name from review, `member`,review_photo where review.num=#{num} and review.member_num = member.num and review_photo.review_num=review.num -->
		  <!-- select review.num,place_id,review.member_num,member.name,stars,content,created_at, (select review_photo.file_name from review_photo where review_photo.review_num=#{num}) as file_name from review, `member` where review.num=#{num} and review.member_num = member.num -->
			<!-- select review.num,place_id,review.member_num,member.name,stars,content,created_at,review_photo.num as review_photo_num from review, `member`,review_photo where review.num=#{num} and review.member_num = member.num and review_photo.review_num=review.num -->
			<!-- select review.num,place_id,review.member_num,member.name,stars,content,created_at,review_photo.num as review_photo_num
 			from `member`,review left outer join review_photo on review_photo.review_num = review.num 
 			where review.num=#{num} and review.member_num = member.num ; -->
 			select review.num,place_id,review.member_num,`member`.`name`,stars,content,created_at,review_photo.num as review_photo_num,profile_photo.file_name
 			from `member`, review left outer join review_photo on (review_photo.review_num = review.num) left outer join profile_photo on (profile_photo.member_num=review.member_num)
 			where review.num=#{num} and review.member_num = `member`.num ;
	</select> 
	<select id="getOneDataPhoto" parameterType="int" resultType="String">
		select file_name from review_photo where review_photo.num=#{review_photo_num} 
	</select>
	<select id="getDataFiles" resultType="String" parameterType="int">
		select file_name from review_photo where review_photo.review_num= #{num}
	</select>
	   <insert id="insertLike" parameterType="Map">
      insert into `like`(member_num,place_id,`check`) values (#{member_num},#{place_id},1) 
   </insert>
   <delete id="deleteLike" parameterType="Map">
      delete from `like` where `like`.member_num = #{loginNum} and place_id = #{place_id}
   </delete>
	<!-- 상세보기-->
</mapper>